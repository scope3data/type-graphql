name: Auto Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "website/**"
      - "docs/**"
      - ".github/**"
      - "!.github/workflows/**"

concurrency:
  group: ${{ github.workflow }}-main
  cancel-in-progress: false

permissions:
  contents: write
  actions: write

jobs:
  auto-release:
    name: Auto Version Bump and Release
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[v') && github.event.head_commit.author.name != 'GitHub Action' && !contains(github.event.head_commit.message, '] [v') }}
    permissions:
      contents: write
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          echo "Current version: ${CURRENT_VERSION}"

      - name: Determine version bump
        id: version_bump
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [[ -z "$LAST_TAG" ]]; then
            COMMITS=$(git log --pretty=format:"%s" --no-merges)
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"%s" --no-merges)
          fi

          BUMP_TYPE="patch"

          if echo "$COMMITS" | grep -qiE "(BREAKING CHANGE|!:|breaking:|major:|bump.*major)"; then
            BUMP_TYPE="major"
          elif echo "$COMMITS" | grep -qiE "(feat:|feature:|minor:|bump.*minor)"; then
            BUMP_TYPE="minor"
          else
            BUMP_TYPE="patch"
          fi

          echo "bump_type=${BUMP_TYPE}" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.current }}"
          BUMP_TYPE="${{ steps.version_bump.outputs.bump_type }}"

          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          case $BUMP_TYPE in
            "major")
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            "minor")
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            "patch")
              PATCH=$((PATCH + 1))
              ;;
          esac

          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "tag=v${NEW_VERSION}" >> $GITHUB_OUTPUT

          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            pkg.version = '${NEW_VERSION}';
            fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');
          "

      - name: Collect commit messages for release
        id: commit_messages
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [[ -z "$LAST_TAG" ]]; then
            git log --pretty=format:"- %s" --no-merges > /tmp/commits.txt
          else
            git log ${LAST_TAG}..HEAD --pretty=format:"- %s" --no-merges > /tmp/commits.txt
          fi

          echo "Raw commits:"
          cat /tmp/commits.txt

          # Use base64 encoding to safely pass commit messages through JSON
          COMMITS_B64=$(base64 -w 0 /tmp/commits.txt)

          echo "commits<<EOF" >> $GITHUB_OUTPUT
          cat /tmp/commits.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "commits_b64=$COMMITS_B64" >> $GITHUB_OUTPUT

      - name: Amend commit with version
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          CURRENT_MESSAGE=$(git log -1 --pretty=%B)
          NEW_MESSAGE="${CURRENT_MESSAGE} [v${NEW_VERSION}]"

          git add package.json
          git commit --amend -m "${NEW_MESSAGE}"
          git push --force-with-lease origin main

      - name: Create tag and trigger release
        run: |
          TAG="${{ steps.bump_version.outputs.tag }}"
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"

          # Create tag with commit messages
          COMMIT_MESSAGES="${{ steps.commit_messages.outputs.commits }}"

          TAG_MESSAGE=$(printf "Release %s\n\nChanges in this release:\n%s" "${TAG}" "${COMMIT_MESSAGES}")

          git tag -a "${TAG}" -m "${TAG_MESSAGE}"
          git push origin "${TAG}"

          COMMITS_B64="${{ steps.commit_messages.outputs.commits_b64 }}"
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d "{\"event_type\":\"release\",\"client_payload\":{\"tag\":\"${TAG}\",\"version\":\"${NEW_VERSION}\",\"commits_b64\":\"${COMMITS_B64}\"}}"

      - name: Output summary
        run: |
          echo "## ðŸš€ Auto Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous Version**: ${{ steps.current_version.outputs.current }}" >> $GITHUB_STEP_SUMMARY
          echo "- **New Version**: ${{ steps.bump_version.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Bump Type**: ${{ steps.version_bump.outputs.bump_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: ${{ steps.bump_version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: Amended last commit with version info" >> $GITHUB_STEP_SUMMARY
          echo "- **Next Step**: Release workflow triggered via repository dispatch" >> $GITHUB_STEP_SUMMARY
